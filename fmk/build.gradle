buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.saliman:gradle-cobertura-plugin:2.5.4"
  }
}

repositories {
    jcenter()
    mavenCentral()
}

apply plugin: 'net.saliman.cobertura'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
	
group = 'com.bytes'
version = thinkr_version

dependencies {
	
	compile fileTree(dir:'lib', includes:['*.jar'])
	
	compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
	
	// Tomcat already have websocket implementation, won't need this, 
	// but will need to change implementation to use standard websocket api
	compile group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.3.0'
	compile group: 'org.glassfish.tyrus', name: 'tyrus-client', version: '1.13.1'
	
	compile group: 'javax.json', name: 'javax.json-api', version: '1.0'
	compile group: 'commons-validator', name: 'commons-validator', version: '1.3.1'
	compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.8.Final'
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.26-b02'
	compile group: 'com.google.code.gson', name: 'gson', version: gson_version
	
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
	
	// Persistence Service
	compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
	
	//compile group: 'io.projectreactor', name: 'reactor-core', version: '3.1.+'
	//compile "io.projectreactor:reactor-core:3.2.0.M1"
	
	testCompile group: 'org.jmockit', name: 'jmockit', version: '1.30'
	testCompile 'junit:junit:4.12'
	//testCompile("io.projectreactor:reactor-test:3.1.+")
}

eclipse {
	classpath {
		downloadSources = true
		downloadJavadoc = true
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

tasks.withType(Test) {
	forkEvery=1

}
javadoc {
	failOnError=false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

task exportToPogo(type: Copy) {
	description = "Export jar to Pogo lib folder"
    from jar
    from sourcesJar
    into "${thinkr_home}/pogoraid/lib"
}